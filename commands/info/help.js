const Discord = require('discord.js')

function list(name, cname, bot) {
    return {
        name : cname,
        d : bot.commands.filter(cmd => cmd.category == name).map(cmd => `**${bot.config().PREFIX}${cmd.name} ${cmd.use} ‚Äî ${cmd.description}**`)
    }
}

function _$(message, bot, cmds, cmd = 0, footer, page) {
    let params = '`[...]` ‚Äî –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä\n`<...>` ‚Äî –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä\n`||` ‚Äî A—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏\n\n';
    let tempDesc = '';
    let embed = new Discord.RichEmbed()
        .setTitle(`[ ${cmds.d.length} ] Commands module > **${cmds.name}**`)
        for (let i in cmds.d) {
            cmd++;
            if (page === 1 && cmd <= 10) {
                tempDesc += `${cmds.d[i]}\n`
                embed.setDescription(params + tempDesc.replace(/undefined/g, ''));
            }

            if (cmd >= page * 10 - 9 && page > 1) {
                tempDesc += `${cmds.d[i]}\n`
                embed.setDescription(params + tempDesc.replace(/undefined/g, ''));
            }
            embed.setFooter('–°—Ç—Ä–∞–Ω–∏—Ü–∞ ' + page + '/' + Math.ceil(cmd / 10), footer[1])
        }    
        embed.setColor(bot.config().color.SERVER)
        embed.setTimestamp()

    let error = new Discord.RichEmbed()
        .setTitle(`[ 0 ] Commands module > **${cmds.name}**`)
        .setColor('#ff0000')
        .setDescription(params + '**–¢–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.**')
        .setFooter('–°—Ç—Ä–∞–Ω–∏—Ü–∞ ' + page + '/' + Math.ceil(cmd / 10), footer[1])
        .setTimestamp()

    return {
        embed : cmd < page * 10 - 10 && page > 1 || page <= 0 ? error : embed
    }
}

module.exports = {
    name: "help",
    description: "–°–ø–∏—Å–∞–∫ –∫–æ–º–∞–Ω–¥.",
    aliases: ["h"],
    dm: false,
    use: '[cmds]',

    async run(bot, message, args, footer) {
        let command = bot.commands.get(args[0]);
        if(!command) {
            let type = 'help'
            let count = 1;

            let emoji = ['üìõ', 'üí∞', 'üéÆ', 'üñ•', 'üé∂', '‚Ñπ', 'üîû', 'üö∏', 'üòÅ', 'üõ†', '‚≠ï', '‚óÄ', '‚ñ∂'];

            let embedG = new Discord.RichEmbed()
                .setTitle(`[ ${bot.commands.size} ] –ü–æ–º–æ—â—å –¥–ª—è **${message.author.username}**`)
                .setDescription(`**üìõ | ADMIN\nüí∞ | ECONOMY\nüéÆ | GAME\nüñ• | IMAGE\nüé∂ | MUSIC\n‚Ñπ | INFO\nüîû | NSFW\nüö∏ | OTHER\nüòÅ | REACTION\nüõ† | TOOLS**`)
                .addField('–ú–µ–Ω—é Help', `[\\üìõ - \\üé∂] - –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ Emoji\n\\‚≠ï - –í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n[\\‚óÄ - \\‚ñ∂] - –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n\n${bot.config().PREFIX}help [cmds] - –£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ.`)
                .setColor(bot.config().color.SERVER)
                .setFooter(...footer)
                .setTimestamp()

            let msg = await message.channel.send(embedG).catch(e => console.log(e))
                for(var i = 0; i < emoji.length; i++)
                    await msg.react(emoji[i])

            const filter = (reaction, user) => {
                return emoji.includes(reaction.emoji.name) && user.id === message.author.id;
            };

            const collector = msg.createReactionCollector(filter, { time: 1000 * 60 * 5 });

            collector.on('collect', async e => {
                let m = e.emoji.name;

                if(m == 'üìõ'){
                    count = count - count + 1
                    type = 'admin'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üí∞'){
                    count = count - count + 1
                    type = 'economy'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üéÆ'){
                    count = count - count + 1
                    type = 'game'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üñ•'){
                    count = count - count + 1
                    type = 'image'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == '‚Ñπ'){
                    count = count - count + 1
                    type = 'info'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üîû'){
                    count = count - count + 1
                    type = 'nsfw'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üö∏'){
                    count = count - count + 1
                    type = 'other'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üòÅ'){
                    count = count - count + 1
                    type = 'reaction'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üõ†'){
                    count = count - count + 1
                    type = 'tools'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == 'üé∂'){
                    count = count - count + 1
                    type = 'music'
                    await msg.edit(_$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count).embed)
                    await e.remove(message.author.id)
                }

                if(m == '‚≠ï'){
                    count = count - count + 1
                    type = 'help'
                    await msg.edit(embedG)
                    await e.remove(message.author.id)
                }

                if(m == '‚óÄ'){
                    await e.remove(message.author.id);
                    if(type == 'help') return;
                    var ten = _$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count -= 1);
                    await msg.edit(ten.embed);
                }

                if(m == '‚ñ∂'){
                    await e.remove(message.author.id);
                    if(type == 'help') return;
                    var ten = _$(message, bot, list(type, type.toUpperCase(), bot), 0, footer, count += 1);
                    await msg.edit(ten.embed);
                }
            });
        } else {
            let embed = new Discord.RichEmbed()
                .setTitle('‚Ñπ | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ')
                .setDescription(`**NAME: ${command.name}\nDESCRIPTION: ${command.description}\nALIASES: ${command.aliases == 0 ? 'none' : command.aliases.join('; ')}\nDM: ${command.dm ? 'yes' : 'no'}\nCATEGORY: ${command.category}\nUSE: ${!command.use ? 'none' : command.use}**`)
                .setColor(bot.config().color.SERVER)
                .setFooter(...footer)
                .setTimestamp()
            message.channel.send(embed)
        }
    }
};